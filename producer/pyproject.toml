[tool.poetry]
name = "producer"
version = "0.1.0"
description = "Producer microservice built with Django & DRF within 'purchase_analytics' app"
authors = ["n8creator <github@n8creator.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "5.1"
djangorestframework = "^3.15.2"
gunicorn = "^23.0.0"
python-dotenv = "^1.0.1"
dj-database-url = "^2.3.0"
psycopg2-binary = "^2.9.10"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.0"
ipython = "^8.29.0"
djlint = "^1.36.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-html = "^4.1.1"
pytest-xdist = "^3.6.1"
pytest-django = "^4.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff tool
[tool.ruff]
line-length = 120
indent-width = 4

exclude = [
  "migrations",
  "__pycache__",
  ".venv",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "DJ", # flake8-django
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["E501"]
"manage.py" = ["E501"]
"settings.py" = ["E501", "F403", "F405"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.mccabe]
max-complexity = 10

# MyPy global options:
[tool.mypy]
python_version = "3.12"
show_error_codes = true

files = [
    "app",
]